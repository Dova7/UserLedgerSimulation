// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250613185545_Initial Create")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Ledger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("TimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Ledgers");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c21feb91-5cbb-4f8a-884a-0597444e7bb2"),
                            Balance = 0m,
                            CreatedAt = new DateTime(2024, 6, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            Username = "Brokey"
                        },
                        new
                        {
                            Id = new Guid("b175f222-de5d-473c-af2c-59a713bf4c95"),
                            Balance = 500000m,
                            CreatedAt = new DateTime(2024, 6, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            Username = "Rich"
                        },
                        new
                        {
                            Id = new Guid("4585ce1a-5a9d-4af8-9829-92490bb9f2a3"),
                            Balance = 10000m,
                            CreatedAt = new DateTime(2024, 6, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            Username = "John"
                        },
                        new
                        {
                            Id = new Guid("a0c167f1-3d60-4e8d-8b46-114db223284f"),
                            Balance = 256698m,
                            CreatedAt = new DateTime(2024, 6, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            Username = "Jane"
                        },
                        new
                        {
                            Id = new Guid("d39375a6-43f7-4bee-ae3f-745ccde7eac4"),
                            Balance = 25605.5m,
                            CreatedAt = new DateTime(2024, 6, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            Username = "Sam"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Ledger", b =>
                {
                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Ledgers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("Ledgers");
                });
#pragma warning restore 612, 618
        }
    }
}
